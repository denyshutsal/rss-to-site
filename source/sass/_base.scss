/* stylelint-disable */
/* stylelint-enable */

/* ==========================================================================
base
========================================================================== */
html {
  scroll-behavior: smooth;
}

body {
  background-color: $background-color-base;
  color: $color-base;
  font-family: $font-family-base;
  font-size: $font-size-base;
  font-style: $font-style-base;
  font-weight: $font-weight-base;
  line-height: $line-height-base;
  text-align: $text-align-base;
}

/**
 * Screen reader only
 */

.visuallyhidden {
  position: absolute;
  overflow: hidden;
  width: 1px;
  height: 1px;
  padding: 0;
  border: 0;
  margin: -1px;
  clip: rect(0, 0, 0, 0);
}

.hidden {
  display: none !important;
}

// Always hide an element with the `hidden` HTML attribute (from PureCSS).
// Needed for proper display in IE 10-.
[hidden] {
  display: none !important;
}

img {
  max-width: 100%;
  height: auto;
}

a {
  display: inline-block;
}

/* https://css-tricks.com/introduction-reduced-motion-media-query/ */
@media (prefers-reduced-motion: reduce) {
  * {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    scroll-behavior: auto !important;
    transition-duration: 0.01ms !important;
  }
}

.clearfix::after {
  display: table;
  clear: both;
  content: '';
}

/**
 * Shim for "new" HTML5 structural elements to display correctly (IE10, older browsers)
 */

article,
aside,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section {
  display: block;
}

// Future-proof rule: in browsers that support :focus-visible, suppress the focus outline
// on elements that programmatically receive focus but wouldn't normally show a visible
// focus outline. In general, this would mean that the outline is only applied if the
// interaction that led to the element receiving programmatic focus was a keyboard interaction,
// or the browser has somehow determined that the user is primarily a keyboard user and/or
// wants focus outlines to always be presented.
//
// See https://developer.mozilla.org/en-US/docs/Web/CSS/:focus-visible
// and https://developer.paciellogroup.com/blog/2018/03/focus-visible-and-backwards-compatibility/
[tabindex='-1']:focus:not(:focus-visible) {
  outline: 0 !important;
}

// Content grouping
// 1. Add the correct box sizing in Firefox.
hr {
  box-sizing: content-box; // 1
}

// Abbreviations
//
// 1. Duplicate behavior to the data-* attribute for our tooltip plugin
// 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
// 3. Add explicit cursor to indicate changed behavior.
// 4. Remove the bottom border in Firefox 39-.
// 5. Prevent the text-decoration to be skipped.
abbr[title],
abbr[data-original-title] {
  // 1
  border-bottom: 0; // 4
  cursor: help; // 3
  text-decoration: underline; // 2
  text-decoration: underline dotted; // 2
  text-decoration-skip-ink: none; // 5
}

address {
  margin-bottom: 1rem;
  font-style: normal;
  line-height: inherit;
}

ol,
ul,
dl {
  margin-top: 0;
  margin-bottom: 1rem;
}

dd {
  margin-bottom: 0.5rem;
  margin-left: 0; // Undo browser default
}

blockquote {
  margin: 0 0 1rem;
}

//
// Prevent `sub` and `sup` elements from affecting the line height in
// all browsers.
//
sub,
sup {
  position: relative;
  font-size: 75%;
  line-height: 0;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

pre {
  // Don't allow content to break outside
  overflow: auto;
  // Remove browser default top margin
  margin-top: 0;
  // Reset browser default of `1em` to use `rem`s
  margin-bottom: 1rem;
}

th {
  // Matches default `<td>` alignment by inheriting from the `<body>`, or the
  // closest parent with a set `text-align`.
  text-align: inherit;
}

label {
  // Allow labels to use `margin` for spacing.
  display: inline-block;
  margin-bottom: 1rem;
}

// Remove the default `border-radius` that macOS Chrome adds.
//
// Details at https://github.com/twbs/bootstrap/issues/24093
button {
  border-radius: 0;
}

input,
button,
select,
optgroup,
textarea {
  margin: 0; // Remove the margin in Firefox and Safari
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
}

// Remove inner border and padding from Firefox, but don't restore the outline like Normalize.
// button::-moz-focus-inner,
// [type='button']::-moz-focus-inner,
// [type='reset']::-moz-focus-inner,
// [type='submit']::-moz-focus-inner {
//   padding: 0;
//   border-style: none;
// }

// Work around a Firefox/IE bug where the transparent `button` background
// results in a loss of the default `button` focus styles.
//
// Credit: https://github.com/suitcss/base/
button:focus {
  outline: 1px dotted;
  outline: 5px auto -webkit-focus-ring-color;
}

// Remove the inheritance of word-wrap in Safari.
//
// Details at https://github.com/twbs/bootstrap/issues/24990
select {
  word-wrap: normal;
}

input[type='radio'],
input[type='checkbox'] {
  box-sizing: border-box; // 1. Add the correct box sizing in IE 10-
  padding: 0; // 2. Remove the padding in IE 10-
}

fieldset {
  // Browsers set a default `min-width: min-content;` on fieldsets,
  // unlike e.g. `<div>`s, which have `min-width: 0;` by default.
  // So we reset that to ensure fieldsets behave more like a standard block element.
  // See https://github.com/twbs/bootstrap/issues/12359
  // and https://html.spec.whatwg.org/multipage/#the-fieldset-and-legend-elements
  min-width: 0;
  // Reset the default outline behavior of fieldsets so they don't affect page layout.
  padding: 0;
  border: 0;
  margin: 0;
}

// 1. Correct the text wrapping in Edge and IE.
// 2. Correct the color inheritance from `fieldset` elements in IE.
legend {
  display: block;
  width: 100%;
  max-width: 100%; // 1
  padding: 0;
  margin-bottom: 0.5rem;
  color: inherit; // 2
  font-size: 1.5rem;
  line-height: inherit;
  white-space: normal; // 1
}

// Correct the cursor style of increment and decrement buttons in Chrome.
[type='number']::-webkit-inner-spin-button,
[type='number']::-webkit-outer-spin-button {
  height: auto;
}

[type='search']::-webkit-search-decoration {
  -webkit-appearance: none;
}

output {
  display: inline-block;
}

summary {
  cursor: pointer;
}

/* debug tools */

// * {
//   outline: 1px solid red;
// }

/* debug tools */
// * {
//   background-color: rgba(255, 0, 0, 0.2);
// }

// * * {
//   background-color: rgba(0, 255, 0, 0.2);
// }

// * * * {
//   background-color: rgba(0, 0, 255, 0.2);
// }

// * * * * {
//   background-color: rgba(255, 0, 255, 0.2);
// }

// * * * * * {
//   background-color: rgba(0, 255, 255, 0.2);
// }

// * * * * * * {
//   background-color: rgba(255, 255, 0, 0.2);
// }

// * * * * * * * {
//   background-color: rgba(255, 0, 0, 0.2);
// }

// * * * * * * * * {
//   background-color: rgba(0, 255, 0, 0.2);
// }

// * * * * * * * * * {
//   background-color: rgba(0, 0, 255, 0.2);
// }

/* debug tools */

/* if you forgot the 'alt' attribute */
// img[alt=""],
// img:not([alt]) {
//   border: 5px dashed red;
// }
